<script is:inline>
  const links = document.getElementsByTagName("a")
  const dropdown = document.getElementById("dropdown-menu")
  const linksTransition = ["transition-all", "duration-300"]
  const dropdownTransition = ["transition-all", "duration-200"]
  const linksTimeout = 150
  const dropdownTimeout = 150
  
  // delay color transition on page load/theme change
  for (let link of links) {
    setTimeout(() => {link.classList.add(...linksTransition)}, linksTimeout)
  }
  setTimeout(() => { dropdown.classList.add(...dropdownTransition)}, dropdownTimeout)

  const theme = (() => {
    if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
      return localStorage.getItem('theme');
    }
    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
      return 'dark';
    }
      return 'light';
  })();

  if (theme === 'light') {
    document.documentElement.classList.remove('dark');
  } else {
    document.documentElement.classList.add('dark');
  }

  window.localStorage.setItem('theme', theme);

  const handleToggleClick = () => {
    const element = document.documentElement;
    element.classList.toggle("dark");

    const isDark = element.classList.contains("dark");
    localStorage.setItem("theme", isDark ? "dark" : "light");

    // delay color transition for links/dropdown when theme switches
    for (let link of links) {
      link.classList.add("transition-none")
      link.classList.remove(...linksTransition)
      setTimeout(() => {
        link.classList.remove("transition-none")
        link.classList.add(...linksTransition)
      }, linksTimeout)
    }
    dropdown.classList.add("transition-none")
    dropdown.classList.remove(...dropdownTransition)
    setTimeout(() => {
      dropdown.classList.remove("transition-none")
      dropdown.classList.add(...dropdownTransition)
    }, dropdownTimeout)
  }

  document.getElementById("themeToggle").addEventListener("click", handleToggleClick);
</script>